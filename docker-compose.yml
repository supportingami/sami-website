############# Run Via CLI #################
# yarn scripts docker build -e docker
# yarn scripts docker run

services:
  nginx:
    container_name: sami_webserver
    image: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - webserver

  backend:
    container_name: sami_backend
    image: sami/backend:latest
    # command: "/bin/ash -c 'while sleep 3600; do :; done'"
    command: "strapi start"
    restart: unless-stopped
    ports:
      - "1337:1337"
    volumes:
      - ./data:/app/data
      - ./docker/data/uploads:/app/public/uploads
      - ./docker/data/db:/app/db
      # TODO - persist db data (possibly just use db image to allow connect)
      # - /app/backend/sami-dev.db
    env_file:
      - ./config/docker.env
      - ./config/docker.local.env
    environment:
      # - DATABASE_URL=postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db:5432/${DATABASE_NAME}
      - DATABASE_FILENAME=db/sami-docker.db
      # Load docker configuration
      - NODE_ENV=docker
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:1337 || exit 1"
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
    networks:
      - webserver

  frontend:
    container_name: sami_frontend
    image: sami/frontend:latest
    command: next dev
    # command: "/bin/ash -c 'while sleep 3600; do :; done'"
    restart: unless-stopped
    # Env inlined during build however when running `next dev` can use on start
    # TODO - ensure populated correctly
    env_file:
      - ./config/docker.env
      - ./config/docker.local.env
    volumes:
      - ./docker/data/uploads:/app/public/uploads

    # Healthcheck can be slow, just start optimistically

    # depends_on:
    #   backend:
    #     condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - webserver

# If using Postgres

# db:
#   container_name: sami_db
#   platform: linux/amd64 #for platform error on Apple M1 chips
#   restart: unless-stopped
#   env_file:
#     - ./config/docker.env
#     - ./config/docker.local.env
#   image: postgres:12.0-alpine
#   environment:
#     POSTGRES_USER: ${DATABASE_USERNAME}
#     POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#     POSTGRES_DB: ${DATABASE_NAME}
#   volumes:
#     - db-data:/var/lib/postgresql/data/ #using a volume
#   networks:
#     - webserver

networks:
  webserver:

volumes:
  db-data:

  # TODO find a way to run nginx reverse proxy and dashboard on path
  # https://docs.strapi.io/dev-docs/deployment/nginx-proxy
  # https://forum.strapi.io/t/strapi-in-subfolder-issue/13401/4
#######################################################################################
# Legacy Notes - to confirm if still required
#######################################################################################
# Expose on 127.0.0.1 instead of default 0.0.0.0 as next.js rewrites localhost to this
# https://earthly.dev/blog/youre-using-docker-compose-wrong/
# https://github.com/vercel/next.js/issues/27865
# NOTE - might not work in WSL (?) https://github.com/docker/for-win/issues/13182

#######################################################################################
# Deprecated - use build from cli instead of compose (to ensure base builds correctly)
#######################################################################################
# build:
#   dockerfile: ./docker/base.dockerfile
#   tags:
#     - "sami/base:1.0.0"
